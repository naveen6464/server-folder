components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        roleID:
          type: string
        corematicaName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        mobileNumber:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        location:
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: boolean/home/naveen/Documents/folder3/router/v1/users.route.js
        updatedBy:
          type: boolean
      example:
        _id: 1
        firstName: praveen kumar
        lastName: praveen kumar
        email: praveen@example.com
        password: password1
        role: admin
        mobileNumber: "1234567890"
        street: 2311  Sundown Lane
        city: Austin
        state: Texas
        location: location
        isActive: true,
        createdBy: "1"
        updatedBy: "2"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00   
    Pillar:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        projectCount:
          type: number
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: boolean
        updatedBy:
          type: boolean
      example:
        _id: 1
        title: "Corporate Governance"
        description: "Corporate Governance (board versus executive management)"
        projectCount: 3
        isActive: true
        createdBy: "1"
        updatedBy: "2"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00       
    Goal:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        projectCount:
          type: number
        goalDate:
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: boolean
        updatedBy:
          type: boolean
      example:
        _id: 1
        pillarId: "1"
        title: "Role clarity"
        description: "Role clarity (board versus executive management)"
        projectCount: 6
        goalDate: "2020-10-08T10:44:38.087Z"
        isActive: true
        createdBy: "1"
        updatedBy: "2"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00       
    Request:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
        requestId:
          type: string
        projectId:
          type: string
        userId:
          type: string
        status:
          type: string
        grantedHours:
          type: string
        usedHour:
          type: string
        remainingHour:
          type: string
        requestedHours:
          type: string
        hours:
          type: string
        requestOrEmail:
          type: string
        bodyOfWork:
          type: string
        amountToPay:
          type: number
        hoursToAdd:
          type: number
        description:
          type: string
        pendingAmount:
          type: number
        approvedAmount:
          type: number
        paidAmount:
          type: number
        duration:
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: string
        updatedBy:
          type: string
      example:
        requestId: "1"
        projectId: "1"
        userId: "1" 
        status: pending
        amountToPay: 1500
        requestorEmail: praveen@example.com
        bodyOfWork: Discussion with Doctors
        hoursToAdd: "12"
        description: samle description
        duration: "1"
        isActive: true
        createdBy: "1"
        updatedBy: "2"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00
    payRelease:
      type: object
      properties:
        amount:
          type: number
        bank:
          type: string
        refernceDetails:
          type: string
        comments:
          type: string
        paymentRequestId:
          type: array
        projectId:
          type: array
      example:
        amount: 1200
        bank: "IOB"
        referenceDetails: "amounts are paid"
        comments: "paid"
        paymentRequestId: ["1","2","3"]
        projectId: "1"
    proposedProject:
      type: object
      properties:
        userId:
          type: string
        proposedProject:
          type: string
        description:
          type: string
        approved:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
      example:
        userId: "1"
        approved: "approved"
        createdBy: "1"
        updatedBy: "2"
        isActive: true
        isDeleted: false
    approvedService:
      type: object
      properties:
        projectId:
          type: string
        requestId:
          type: string
        userId:
          type: string
        isActive:
          type: boolean
      example:
        projectId: "1"
        requestId: "2"
        userId: "3"
        isActive: true
    sponsorDetails:
      type: objectcomponents
      properties:
        _id:
          type: string
        projectId:
          type: string
        sponsorId:
          type: string
      example:
        projectId: "1"
        requestId: "2"
 
    dashboard:
      type: object
      properties:
        projects:
          type: string
        requests:
          type: string
      example:
        projects: "1"
        requests: "6"
        goals: "1"
        pillars: "1"
        users: "8"
        payRelease: "16"
        payments: "10"
        allocatedFund: 5000
        usedFund: 16700
        amountToPay: 0
    Project:
      type: object
      properties:
        _id:
          type: string
        pillarId:
          type: array
        goalId:
          type: array
        userId:
          type: string
        sponsorData:
          type: string
        resourceData:
          type: string
        pendingService:
          type: string
        pendingPayment:
          type: string
        title:
          type: string
        type:
          type: string
        description:
          type: string
        location:
          type: string
        levelOfEffort:
          type: string
        rateOfPay:
          type: number
        allocatedFund:
          type: number
        usedAmount:
          type: number
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: string
        updatedBy:
          type: string
      example:
        _id: 1
        type: "project"
        pillarId: ["1","2"]
        goalId: ["1","2"]
        userId: "1"
        sponsorData: ["1"]
        resourceData: ["1"]
        pendingService: ["1","2"]
        pendingPayment: ["2","3"]
        title: "Develop program for board member orientation"          
        description: member orientation held at texas.         
        levelOfEffort: "2"
        rateOfPay: 125
        isActive: true
        createdBy: "1"
        updatedBy: "2"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00
 
    Logs:
      type: object
      properties:
        _id:
          type: string
        action:
          type: string
        dataId:
          type: string
        collectionName:
          type: string
        data:
          type: object
      example:
        action: "create"
        dataId: "12"
        collectionName: "1"
        data: "1"
    
  
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z
    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
